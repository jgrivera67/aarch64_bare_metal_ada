<?xml version="1.0" encoding="us-ascii" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="931px" preserveAspectRatio="none" style="width:1110px;height:931px;background:#FFFFFF;" version="1.1" viewBox="0 0 1110 931" width="1110px" zoomAndPan="magnify"><defs/><g><ellipse cx="555" cy="20" fill="#222222" rx="10" ry="10" style="stroke:#222222;stroke-width:1.0;"/><rect fill="#555555" height="6" rx="2.5" ry="2.5" style="stroke:#555555;stroke-width:1.0;" width="859" x="125.5" y="50"/><rect fill="#F1F1F1" height="34.1328" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:0.5;" width="363" x="139.5" y="110.5664"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="343" x="149.5" y="132.168">Setting up Raspberry Pi board for bare-metal development</text><rect fill="#F1F1F1" height="34.1328" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:0.5;" width="440" x="530.5" y="76"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="420" x="540.5" y="97.6016">Building the GNAT cross-toolchain from sources for bare-metal AArch64</text><rect fill="#F1F1F1" height="34.1328" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:0.5;" width="411" x="545" y="145.1328"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="391" x="555" y="166.7344">Building a minimal platform-independent Ada Runtime library (RTS)</text><rect fill="#555555" height="6" rx="2.5" ry="2.5" style="stroke:#555555;stroke-width:1.0;" width="859" x="125.5" y="199.2656"/><path d="M724,222.0215 L724,238.332 L704,242.332 L724,246.332 L724,262.6426 A0,0 0 0 0 724,262.6426 L991,262.6426 A0,0 0 0 0 991,262.6426 L991,232.0215 L981,222.0215 L724,222.0215 A0,0 0 0 0 724,222.0215 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><path d="M981,222.0215 L981,232.0215 L991,232.0215 L981,222.0215 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="224" x="730" y="239.5898">To verify that a minimal bare-metal</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="246" x="730" y="254.9004">program boots and UART output works</text><rect fill="#F1F1F1" height="34.1328" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:0.5;" width="298" x="406" y="225.2656"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="278" x="416" y="246.8672">AArch64 bare-metal Ada "Hello world" program</text><path d="M800,279.3984 L800,295.709 L780,299.709 L800,303.709 L800,320.0195 A0,0 0 0 0 800,320.0195 L1061,320.0195 A0,0 0 0 0 1061,320.0195 L1061,289.3984 L1051,279.3984 L800,279.3984 A0,0 0 0 0 800,279.3984 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><path d="M1051,279.3984 L1051,289.3984 L1061,289.3984 L1051,279.3984 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="240" x="806" y="296.9668">To avoid having to update the SD card</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="104" x="806" y="312.2773">for every change</text><rect fill="#F1F1F1" height="34.1328" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:0.5;" width="450" x="330" y="282.6426"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="430" x="340" y="304.2441">Writing your own UART boot loader for Raspberry Pi bare-metal programs</text><path d="M756,336.7754 L756,353.0859 L736,357.0859 L756,361.0859 L756,377.3965 A0,0 0 0 0 756,377.3965 L1027,377.3965 A0,0 0 0 0 1027,377.3965 L1027,346.7754 L1017,336.7754 L756,336.7754 A0,0 0 0 0 756,336.7754 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><path d="M1017,336.7754 L1017,346.7754 L1027,346.7754 L1017,336.7754 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="250" x="762" y="354.3438">To avoid always printing verbose debug</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="141" x="762" y="369.6543">messages to the UART</text><rect fill="#F1F1F1" height="34.1328" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:0.5;" width="362" x="374" y="340.0195"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="342" x="384" y="361.6211">Writing your own bare-metal debug message logger in Ada</text><path d="M722,387.3965 L722,419.0176 L702,423.0176 L722,427.0176 L722,458.6387 A0,0 0 0 0 722,458.6387 L1078,458.6387 A0,0 0 0 0 1078,458.6387 L1078,397.3965 L1068,387.3965 L722,387.3965 A0,0 0 0 0 722,387.3965 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><path d="M1068,387.3965 L1068,397.3965 L1078,397.3965 L1068,387.3965 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="335" x="728" y="404.9648">- To capture debug information when the bare-metal</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="109" x="736" y="420.2754">program crashes.</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="293" x="728" y="435.5859">- To verify that saving/restoring CPU registers</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="235" x="736" y="450.8965">works, needed for interrupt handling.</text><rect fill="#F1F1F1" height="34.1328" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:0.5;" width="294" x="408" y="405.9512"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="274" x="418" y="427.5527">AArch64 bare-metal exception handling in Ada</text><path d="M736.5,475.3945 L736.5,491.7051 L716.5,495.7051 L736.5,499.7051 L736.5,516.0156 A0,0 0 0 0 736.5,516.0156 L1056.5,516.0156 A0,0 0 0 0 1056.5,516.0156 L1056.5,485.3945 L1046.5,475.3945 L736.5,475.3945 A0,0 0 0 0 736.5,475.3945 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><path d="M1046.5,475.3945 L1046.5,485.3945 L1056.5,485.3945 L1046.5,475.3945 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="299" x="742.5" y="492.9629">To be able to get stack traces and read memory</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="244" x="742.5" y="508.2734">when the bare-metal program crashes.</text><rect fill="#F1F1F1" height="34.1328" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:0.5;" width="323" x="393.5" y="478.6387"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="303" x="403.5" y="500.2402">Writing your own self-hosted mini GDB server in Ada</text><rect fill="#555555" height="6" rx="2.5" ry="2.5" style="stroke:#555555;stroke-width:1.0;" width="1088" x="11" y="536.0156"/><path d="M443,552.0156 L443,583.6367 L423,587.6367 L443,591.6367 L443,623.2578 A0,0 0 0 0 443,623.2578 L771,623.2578 A0,0 0 0 0 771,623.2578 L771,562.0156 L761,552.0156 L443,552.0156 A0,0 0 0 0 443,552.0156 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><path d="M761,552.0156 L761,562.0156 L771,562.0156 L761,552.0156 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="227" x="449" y="569.584">- To catch invalid memory accesses</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="307" x="449" y="584.8945">- Needed to enable caches which is necessary to</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="249" x="461" y="600.2051">support atomic primitives for multicore</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="105" x="461" y="615.5156">synchronization.</text><rect fill="#F1F1F1" height="34.1328" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:0.5;" width="400" x="23" y="570.5703"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="380" x="33" y="592.1719">AArch64 bare-metal memory protection using the ARMv8-A MMU</text><rect fill="#F1F1F1" height="34.1328" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:0.5;" width="238" x="104" y="658.2578"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="218" x="114" y="679.8594">AArch64 bare-metal multicore in Ada</text><rect fill="#F1F1F1" height="34.1328" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:0.5;" width="288" x="799" y="605.1367"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="268" x="809" y="626.7383">AArch64 bare-metal interrupt handling in Ada</text><rect fill="#555555" height="6" rx="2.5" ry="2.5" style="stroke:#555555;stroke-width:1.0;" width="1088" x="11" y="712.3906"/><rect fill="#F1F1F1" height="34.1328" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:0.5;" width="345" x="382.5" y="738.3906"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="325" x="392.5" y="759.9922">AArch64 bare-metal multicore interrupt handling in Ada</text><rect fill="#555555" height="6" rx="2.5" ry="2.5" style="stroke:#555555;stroke-width:1.0;" width="912" x="99" y="792.5234"/><rect fill="#FFFFFF" height="34.1328" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:0.5;" width="373" x="113" y="818.5234"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="353" x="123" y="840.125">Write your own AArch64 multicore RTOS kernel in SPARK Ada</text><rect fill="#FFFFFF" height="34.1328" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:0.5;" width="483" x="514" y="818.5234"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="463" x="524" y="840.125">Write your own AArch64 multicore separation kernel or hypervisor in SPARK Ada</text><rect fill="#555555" height="6" rx="2.5" ry="2.5" style="stroke:#555555;stroke-width:1.0;" width="912" x="99" y="872.6563"/><ellipse cx="555" cy="909.6563" fill="none" rx="11" ry="11" style="stroke:#222222;stroke-width:1.0;"/><ellipse cx="555" cy="909.6563" fill="#222222" rx="6" ry="6" style="stroke:#222222;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="750.5" x2="750.5" y1="110.1328" y2="145.1328"/><polygon fill="#181818" points="746.5,135.1328,750.5,145.1328,754.5,135.1328,750.5,139.1328" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="321" x2="321" y1="56" y2="110.5664"/><polygon fill="#181818" points="317,100.5664,321,110.5664,325,100.5664,321,104.5664" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="750.5" x2="750.5" y1="56" y2="76"/><polygon fill="#181818" points="746.5,66,750.5,76,754.5,66,750.5,70" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="321" x2="321" y1="144.6992" y2="199.2656"/><polygon fill="#181818" points="317,189.2656,321,199.2656,325,189.2656,321,193.2656" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="750.5" x2="750.5" y1="179.2656" y2="199.2656"/><polygon fill="#181818" points="746.5,189.2656,750.5,199.2656,754.5,189.2656,750.5,193.2656" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="555" x2="555" y1="30" y2="50"/><polygon fill="#181818" points="551,40,555,50,559,40,555,44" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="555" x2="555" y1="205.2656" y2="225.2656"/><polygon fill="#181818" points="551,215.2656,555,225.2656,559,215.2656,555,219.2656" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="555" x2="555" y1="259.3984" y2="282.6426"/><polygon fill="#181818" points="551,272.6426,555,282.6426,559,272.6426,555,276.6426" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="555" x2="555" y1="316.7754" y2="340.0195"/><polygon fill="#181818" points="551,330.0195,555,340.0195,559,330.0195,555,334.0195" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="555" x2="555" y1="374.1523" y2="405.9512"/><polygon fill="#181818" points="551,395.9512,555,405.9512,559,395.9512,555,399.9512" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="555" x2="555" y1="440.084" y2="478.6387"/><polygon fill="#181818" points="551,468.6387,555,478.6387,559,468.6387,555,472.6387" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="223" x2="223" y1="604.7031" y2="658.2578"/><polygon fill="#181818" points="219,648.2578,223,658.2578,227,648.2578,223,652.2578" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="223" x2="223" y1="542.0156" y2="570.5703"/><polygon fill="#181818" points="219,560.5703,223,570.5703,227,560.5703,223,564.5703" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="943" x2="943" y1="542.0156" y2="605.1367"/><polygon fill="#181818" points="939,595.1367,943,605.1367,947,595.1367,943,599.1367" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="223" x2="223" y1="692.3906" y2="712.3906"/><polygon fill="#181818" points="219,702.3906,223,712.3906,227,702.3906,223,706.3906" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="943" x2="943" y1="639.2695" y2="712.3906"/><polygon fill="#181818" points="939,702.3906,943,712.3906,947,702.3906,943,706.3906" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="555" x2="555" y1="512.7715" y2="536.0156"/><polygon fill="#181818" points="551,526.0156,555,536.0156,559,526.0156,555,530.0156" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="555" x2="555" y1="718.3906" y2="738.3906"/><polygon fill="#181818" points="551,728.3906,555,738.3906,559,728.3906,555,732.3906" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="299.5" x2="299.5" y1="798.5234" y2="818.5234"/><polygon fill="#181818" points="295.5,808.5234,299.5,818.5234,303.5,808.5234,299.5,812.5234" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="755.5" x2="755.5" y1="798.5234" y2="818.5234"/><polygon fill="#181818" points="751.5,808.5234,755.5,818.5234,759.5,808.5234,755.5,812.5234" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="299.5" x2="299.5" y1="852.6563" y2="872.6563"/><polygon fill="#181818" points="295.5,862.6563,299.5,872.6563,303.5,862.6563,299.5,866.6563" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="755.5" x2="755.5" y1="852.6563" y2="872.6563"/><polygon fill="#181818" points="751.5,862.6563,755.5,872.6563,759.5,862.6563,755.5,866.6563" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="555" x2="555" y1="772.5234" y2="792.5234"/><polygon fill="#181818" points="551,782.5234,555,792.5234,559,782.5234,555,786.5234" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="555" x2="555" y1="878.6563" y2="898.6563"/><polygon fill="#181818" points="551,888.6563,555,898.6563,559,888.6563,555,892.6563" style="stroke:#181818;stroke-width:1.0;"/><!--SRC=[ZLHBRzim3BxdLn3TPGEMxZ8CGtjoLw03XdP5ac9dMcPi8R9eKBApxDUFKfpNcWQxvE2G7xy7gH1HucJ9ife0tCmfHkjhw3kOOUXA4jd0iuMIKIhGAYXHQDfIH0SL3UIuQyd7sum0MAFr2UUkjwvAGB4XU7Wg5c24GvX6PcSQBOAbS0k1Up4K_WKk2Z7Dby-t9qW8hVMsrRyxXr4xsgdr5NMaFpv2KI7CUXzjI-1iAQZ4tyyMym-t4ws0BF1c13wPfNrNtyavXZMBgwwW4wu5szk9vqWWjcwY4bam32HskL5968_O7B2qQknLlpW6G1tyKimMm7ti-fW6h4Acaw0dDx_4PhStQWFmsc-BKoyuneea6tCQn87vE2ky9ee3smeQ7782h6bMg1KfY_az68rIwnAq1gYm6eYlwHAlaz3BleQMGi1QdUQwLfgQf_hu5X5qQzm4vMjzXjMX9GVQGcdX21OIrSGnkN34vanezDjG5orx5Uahbq3FKfWc4WQxsCiuJklIwc1kNZVayyIJ30yf6i7GKBZU8HqlGCZkVX8AaIKH-FRy0aAr3P4aP9WSzqVmH1LjZqSDq23xBkvvNr-oFP1RJXjMn2gl6ppSt-b76IvONX9WwIXvMPFIZ6XM40NJcQLz5485evPbemrd77YjVizmV2NWN2HRoDGSoMHt-x1x08hPu_1rMi3ZuqkwQJZXl0ifcaP53UZiZX-WKTQ1mhRgQUkZ2YEV9HeqoayrsDGQrEXKdWu_SWu08FHTnwBd6hcr9grWgnuFuvFJzYvQmqAxweqtZR2tV_9-fDnXB_ujtJkCVI8dB-7PdjThi6- - -5OTpteJOGpfdTeIAUyK7JPg1tf0cYr-pc55uYdnWlbpCVjnHiV_mWNgKBRNDOAgpyscqwMr8L_0yOYzMZsYxYy0]--></g></svg>